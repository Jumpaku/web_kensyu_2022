import"core-js/modules/web.dom-collections.iterator.js";function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class KeyInput{constructor(){_defineProperty(this,"downCount",new Map),_defineProperty(this,"upCount",new Map),window.addEventListener("keydown",(e=>{var t;const n=null!==(t=this.downCount.get(e.code))&&void 0!==t?t:0;this.downCount.set(e.code,n+1)})),window.addEventListener("keyup",(e=>{var t;const n=null!==(t=this.upCount.get(e.code))&&void 0!==t?t:0;this.upCount.set(e.code,n+1)}))}reset(){this.downCount=new Map,this.upCount=new Map}down(e){var t;return null!==(t=this.downCount.get(e))&&void 0!==t?t:0}up(e){var t;return null!==(t=this.upCount.get(e))&&void 0!==t?t:0}}class Game{constructor(e){_defineProperty(this,"currentScene",void 0),_defineProperty(this,"input",void 0),this.performFrame=this.performFrame.bind(this),this.currentScene=e,this.input={key:new KeyInput}}start(){window.requestAnimationFrame(this.performFrame)}performFrame(e){const t=e/1e3;this.currentScene=this.currentScene.update(t,this.input),this.currentScene.draw(),this.input.key.reset(),window.requestAnimationFrame(this.performFrame)}}class EmptyScene{constructor(){_defineProperty(this,"currentTime",0),_defineProperty(this,"currentKey",void 0)}update(e,t){return this.currentTime=e,this.currentKey=t.key,this}draw(){var e,t,n,r;console.log("down",null!==(e=null===(t=this.currentKey)||void 0===t?void 0:t.down("KeyA"))&&void 0!==e?e:0,"up",null!==(n=null===(r=this.currentKey)||void 0===r?void 0:r.up("KeyA"))&&void 0!==n?n:0)}}const main=()=>{new Game(new EmptyScene).start()};document.querySelector("body").onload=main;export{main};